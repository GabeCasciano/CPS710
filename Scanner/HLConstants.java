/* Generated By:JavaCC: Do not edit this line. HLConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface HLConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int FOR = 5;
  /** RegularExpression Id. */
  int NUM = 6;
  /** RegularExpression Id. */
  int STR = 7;
  /** RegularExpression Id. */
  int SET = 8;
  /** RegularExpression Id. */
  int OBJ = 9;
  /** RegularExpression Id. */
  int ISA = 10;
  /** RegularExpression Id. */
  int FROM = 11;
  /** RegularExpression Id. */
  int TO = 12;
  /** RegularExpression Id. */
  int DO = 13;
  /** RegularExpression Id. */
  int OD = 14;
  /** RegularExpression Id. */
  int WHILE = 15;
  /** RegularExpression Id. */
  int IF = 16;
  /** RegularExpression Id. */
  int THEN = 17;
  /** RegularExpression Id. */
  int ELIF = 18;
  /** RegularExpression Id. */
  int ELSE = 19;
  /** RegularExpression Id. */
  int FI = 20;
  /** RegularExpression Id. */
  int FUNCTION = 21;
  /** RegularExpression Id. */
  int SUB = 22;
  /** RegularExpression Id. */
  int PREDICATE = 23;
  /** RegularExpression Id. */
  int RETURN = 24;
  /** RegularExpression Id. */
  int END = 25;
  /** RegularExpression Id. */
  int PRINT = 26;
  /** RegularExpression Id. */
  int PRINTLN = 27;
  /** RegularExpression Id. */
  int TRUE = 28;
  /** RegularExpression Id. */
  int FALSE = 29;
  /** RegularExpression Id. */
  int NULL = 30;
  /** RegularExpression Id. */
  int LESS = 31;
  /** RegularExpression Id. */
  int LESSEQ = 32;
  /** RegularExpression Id. */
  int GREATER = 33;
  /** RegularExpression Id. */
  int GREATEREQ = 34;
  /** RegularExpression Id. */
  int NOTCOMP = 35;
  /** RegularExpression Id. */
  int EQUAL = 36;
  /** RegularExpression Id. */
  int NOTEQ = 37;
  /** RegularExpression Id. */
  int IN = 38;
  /** RegularExpression Id. */
  int NOTIN = 39;
  /** RegularExpression Id. */
  int PLUS = 40;
  /** RegularExpression Id. */
  int MINUS = 41;
  /** RegularExpression Id. */
  int PROD = 42;
  /** RegularExpression Id. */
  int DIV = 43;
  /** RegularExpression Id. */
  int MOD = 44;
  /** RegularExpression Id. */
  int AND = 45;
  /** RegularExpression Id. */
  int OR = 46;
  /** RegularExpression Id. */
  int NOT = 47;
  /** RegularExpression Id. */
  int ASSIGN = 48;
  /** RegularExpression Id. */
  int LPAREN = 49;
  /** RegularExpression Id. */
  int RPAREN = 50;
  /** RegularExpression Id. */
  int LCURLY = 51;
  /** RegularExpression Id. */
  int RCURLY = 52;
  /** RegularExpression Id. */
  int COMMA = 53;
  /** RegularExpression Id. */
  int SEMICOL = 54;
  /** RegularExpression Id. */
  int IDENTIFIER = 55;
  /** RegularExpression Id. */
  int STRING = 56;
  /** RegularExpression Id. */
  int NUMBER = 57;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"for\"",
    "\"num\"",
    "\"str\"",
    "\"set\"",
    "\"obj\"",
    "\"isa\"",
    "\"from\"",
    "\"to\"",
    "\"do\"",
    "\"od\"",
    "\"while\"",
    "\"if\"",
    "\"then\"",
    "\"elif\"",
    "\"else\"",
    "\"fi\"",
    "\"function\"",
    "\"sub\"",
    "\"predicate\"",
    "\"return\"",
    "\"end\"",
    "\"print\"",
    "\"println\"",
    "\"true\"",
    "\"false\"",
    "\"null\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\"<>\"",
    "\"==\"",
    "\"!=\"",
    "\"=in\"",
    "\"!in\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "\"=\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\";\"",
    "<IDENTIFIER>",
    "<STRING>",
    "<NUMBER>",
  };

}
